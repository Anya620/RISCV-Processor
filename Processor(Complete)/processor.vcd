$date
	Sun Dec 24 16:17:05 2023
$end
$version
	QuestaSim Version 2021.1
$end
$timescale
	1ns
$end

$scope module tb_processor $end

$scope module dut $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var reg 3 # imm_type [2:0] $end
$var reg 1 $ rf_en_id $end
$var reg 1 % rf_en_ex $end
$var reg 1 & rf_en_mem $end
$var reg 5 ' rd_id [4:0] $end
$var reg 5 ( rd_ex [4:0] $end
$var reg 5 ) rd_mem [4:0] $end
$var reg 5 * rd_wb [4:0] $end
$var reg 5 + rs1_id [4:0] $end
$var reg 5 , rs1_ex [4:0] $end
$var reg 5 - rs2_id [4:0] $end
$var reg 5 . rs2_ex [4:0] $end
$var reg 7 / opcode [6:0] $end
$var reg 3 0 funct3 [2:0] $end
$var reg 7 1 funct7 [6:0] $end
$var reg 32 2 mux_out_pc [31:0] $end
$var reg 32 3 mux_out_opr_a [31:0] $end
$var reg 32 4 mux_out_opr_b [31:0] $end
$var reg 1 5 stall_if $end
$var reg 1 6 stall_id $end
$var reg 1 7 flush_id $end
$var reg 1 8 flush_ex $end
$var reg 2 9 forward_opr_a [1:0] $end
$var reg 2 : forward_opr_b [1:0] $end
$var reg 1 ; br_taken $end
$var reg 1 < sel_opr_a_id $end
$var reg 1 = sel_opr_a_ex $end
$var reg 1 > sel_opr_b_id $end
$var reg 1 ? sel_opr_b_ex $end
$var reg 2 @ sel_wb_id [1:0] $end
$var reg 2 A sel_wb_ex [1:0] $end
$var reg 2 B sel_wb_mem [1:0] $end
$var reg 2 C sel_wb_wb [1:0] $end
$var reg 32 D pc_out_if [31:0] $end
$var reg 32 E pc_out_id [31:0] $end
$var reg 32 F pc_out_ex [31:0] $end
$var reg 32 G pc_out_mem [31:0] $end
$var reg 32 H pc_out_wb [31:0] $end
$var reg 32 I inst_if [31:0] $end
$var reg 32 J inst_id [31:0] $end
$var reg 4 K aluop_id [3:0] $end
$var reg 4 L aluop_ex [3:0] $end
$var reg 3 M brop_id [2:0] $end
$var reg 3 N brop_ex [2:0] $end
$var reg 32 O wdata_wb [31:0] $end
$var reg 32 P wdata_id [31:0] $end
$var reg 32 Q rdata1_id [31:0] $end
$var reg 32 R rdata1_ex [31:0] $end
$var reg 32 S rdata2_id [31:0] $end
$var reg 32 T rdata2_ex [31:0] $end
$var reg 32 U rdata2_mem [31:0] $end
$var reg 32 V forwarded_opr_a [31:0] $end
$var reg 32 W forwarded_opr_b [31:0] $end
$var reg 32 X imm_id [31:0] $end
$var reg 32 Y imm_ex [31:0] $end
$var reg 32 Z opr_res_if [31:0] $end
$var reg 32 [ opr_res_ex [31:0] $end
$var reg 32 \ opr_res_mem [31:0] $end
$var reg 32 ] opr_res_wb [31:0] $end
$var reg 1 ^ dm_rd_en_id $end
$var reg 1 _ dm_rd_en_ex $end
$var reg 1 ` dm_rd_en_mem $end
$var reg 1 a dm_wr_en_id $end
$var reg 1 b dm_wr_en_ex $end
$var reg 1 c dm_wr_en_mem $end
$var reg 32 d dmem_out_mem [31:0] $end
$var reg 32 e dmem_out_wb [31:0] $end
$var reg 3 f mem_acc_mode [2:0] $end
$var reg 32 g epc [31:0] $end
$var reg 32 h new_pc_csr [31:0] $end
$var reg 32 i rdata_csr [31:0] $end
$var reg 1 j csr_reg_wr $end
$var reg 1 k csr_reg_rd $end
$var reg 1 l check_mret $end
$var reg 1 m epc_taken $end
$var wire 1 n rf_en_wb $end
$var wire 1 o sel_a_id $end
$var wire 1 p sel_b_id $end

$scope module pc_i $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 q en $end
$var wire 1 r pc_in [31] $end
$var wire 1 s pc_in [30] $end
$var wire 1 t pc_in [29] $end
$var wire 1 u pc_in [28] $end
$var wire 1 v pc_in [27] $end
$var wire 1 w pc_in [26] $end
$var wire 1 x pc_in [25] $end
$var wire 1 y pc_in [24] $end
$var wire 1 z pc_in [23] $end
$var wire 1 { pc_in [22] $end
$var wire 1 | pc_in [21] $end
$var wire 1 } pc_in [20] $end
$var wire 1 ~ pc_in [19] $end
$var wire 1 !! pc_in [18] $end
$var wire 1 "! pc_in [17] $end
$var wire 1 #! pc_in [16] $end
$var wire 1 $! pc_in [15] $end
$var wire 1 %! pc_in [14] $end
$var wire 1 &! pc_in [13] $end
$var wire 1 '! pc_in [12] $end
$var wire 1 (! pc_in [11] $end
$var wire 1 )! pc_in [10] $end
$var wire 1 *! pc_in [9] $end
$var wire 1 +! pc_in [8] $end
$var wire 1 ,! pc_in [7] $end
$var wire 1 -! pc_in [6] $end
$var wire 1 .! pc_in [5] $end
$var wire 1 /! pc_in [4] $end
$var wire 1 0! pc_in [3] $end
$var wire 1 1! pc_in [2] $end
$var wire 1 2! pc_in [1] $end
$var wire 1 3! pc_in [0] $end
$var reg 32 4! pc_out [31:0] $end
$upscope $end

$scope module mux_2x1_csr $end
$var wire 1 5! in_0 [31] $end
$var wire 1 6! in_0 [30] $end
$var wire 1 7! in_0 [29] $end
$var wire 1 8! in_0 [28] $end
$var wire 1 9! in_0 [27] $end
$var wire 1 :! in_0 [26] $end
$var wire 1 ;! in_0 [25] $end
$var wire 1 <! in_0 [24] $end
$var wire 1 =! in_0 [23] $end
$var wire 1 >! in_0 [22] $end
$var wire 1 ?! in_0 [21] $end
$var wire 1 @! in_0 [20] $end
$var wire 1 A! in_0 [19] $end
$var wire 1 B! in_0 [18] $end
$var wire 1 C! in_0 [17] $end
$var wire 1 D! in_0 [16] $end
$var wire 1 E! in_0 [15] $end
$var wire 1 F! in_0 [14] $end
$var wire 1 G! in_0 [13] $end
$var wire 1 H! in_0 [12] $end
$var wire 1 I! in_0 [11] $end
$var wire 1 J! in_0 [10] $end
$var wire 1 K! in_0 [9] $end
$var wire 1 L! in_0 [8] $end
$var wire 1 M! in_0 [7] $end
$var wire 1 N! in_0 [6] $end
$var wire 1 O! in_0 [5] $end
$var wire 1 P! in_0 [4] $end
$var wire 1 Q! in_0 [3] $end
$var wire 1 R! in_0 [2] $end
$var wire 1 S! in_0 [1] $end
$var wire 1 T! in_0 [0] $end
$var wire 1 U! in_1 [31] $end
$var wire 1 V! in_1 [30] $end
$var wire 1 W! in_1 [29] $end
$var wire 1 X! in_1 [28] $end
$var wire 1 Y! in_1 [27] $end
$var wire 1 Z! in_1 [26] $end
$var wire 1 [! in_1 [25] $end
$var wire 1 \! in_1 [24] $end
$var wire 1 ]! in_1 [23] $end
$var wire 1 ^! in_1 [22] $end
$var wire 1 _! in_1 [21] $end
$var wire 1 `! in_1 [20] $end
$var wire 1 a! in_1 [19] $end
$var wire 1 b! in_1 [18] $end
$var wire 1 c! in_1 [17] $end
$var wire 1 d! in_1 [16] $end
$var wire 1 e! in_1 [15] $end
$var wire 1 f! in_1 [14] $end
$var wire 1 g! in_1 [13] $end
$var wire 1 h! in_1 [12] $end
$var wire 1 i! in_1 [11] $end
$var wire 1 j! in_1 [10] $end
$var wire 1 k! in_1 [9] $end
$var wire 1 l! in_1 [8] $end
$var wire 1 m! in_1 [7] $end
$var wire 1 n! in_1 [6] $end
$var wire 1 o! in_1 [5] $end
$var wire 1 p! in_1 [4] $end
$var wire 1 q! in_1 [3] $end
$var wire 1 r! in_1 [2] $end
$var wire 1 s! in_1 [1] $end
$var wire 1 t! in_1 [0] $end
$var wire 1 u! select_line $end
$var reg 32 v! out [31:0] $end
$upscope $end

$scope module inst_mem_i $end
$var wire 1 w! addr [31] $end
$var wire 1 x! addr [30] $end
$var wire 1 y! addr [29] $end
$var wire 1 z! addr [28] $end
$var wire 1 {! addr [27] $end
$var wire 1 |! addr [26] $end
$var wire 1 }! addr [25] $end
$var wire 1 ~! addr [24] $end
$var wire 1 !" addr [23] $end
$var wire 1 "" addr [22] $end
$var wire 1 #" addr [21] $end
$var wire 1 $" addr [20] $end
$var wire 1 %" addr [19] $end
$var wire 1 &" addr [18] $end
$var wire 1 '" addr [17] $end
$var wire 1 (" addr [16] $end
$var wire 1 )" addr [15] $end
$var wire 1 *" addr [14] $end
$var wire 1 +" addr [13] $end
$var wire 1 ," addr [12] $end
$var wire 1 -" addr [11] $end
$var wire 1 ." addr [10] $end
$var wire 1 /" addr [9] $end
$var wire 1 0" addr [8] $end
$var wire 1 1" addr [7] $end
$var wire 1 2" addr [6] $end
$var wire 1 3" addr [5] $end
$var wire 1 4" addr [4] $end
$var wire 1 5" addr [3] $end
$var wire 1 6" addr [2] $end
$var wire 1 7" addr [1] $end
$var wire 1 8" addr [0] $end
$var reg 32 9" data [31:0] $end
$upscope $end

$scope module inst_dec_i $end
$var wire 1 :" inst [31] $end
$var wire 1 ;" inst [30] $end
$var wire 1 <" inst [29] $end
$var wire 1 =" inst [28] $end
$var wire 1 >" inst [27] $end
$var wire 1 ?" inst [26] $end
$var wire 1 @" inst [25] $end
$var wire 1 A" inst [24] $end
$var wire 1 B" inst [23] $end
$var wire 1 C" inst [22] $end
$var wire 1 D" inst [21] $end
$var wire 1 E" inst [20] $end
$var wire 1 F" inst [19] $end
$var wire 1 G" inst [18] $end
$var wire 1 H" inst [17] $end
$var wire 1 I" inst [16] $end
$var wire 1 J" inst [15] $end
$var wire 1 K" inst [14] $end
$var wire 1 L" inst [13] $end
$var wire 1 M" inst [12] $end
$var wire 1 N" inst [11] $end
$var wire 1 O" inst [10] $end
$var wire 1 P" inst [9] $end
$var wire 1 Q" inst [8] $end
$var wire 1 R" inst [7] $end
$var wire 1 S" inst [6] $end
$var wire 1 T" inst [5] $end
$var wire 1 U" inst [4] $end
$var wire 1 V" inst [3] $end
$var wire 1 W" inst [2] $end
$var wire 1 X" inst [1] $end
$var wire 1 Y" inst [0] $end
$var reg 5 Z" rd [4:0] $end
$var reg 5 [" rs1 [4:0] $end
$var reg 5 \" rs2 [4:0] $end
$var reg 7 ]" opcode [6:0] $end
$var reg 7 ^" funct7 [6:0] $end
$var reg 3 _" funct3 [2:0] $end
$upscope $end

$scope module reg_file_i $end
$var wire 1 ! clk $end
$var wire 1 `" rf_en $end
$var wire 1 a" rd [4] $end
$var wire 1 b" rd [3] $end
$var wire 1 c" rd [2] $end
$var wire 1 d" rd [1] $end
$var wire 1 e" rd [0] $end
$var wire 1 f" rs1 [4] $end
$var wire 1 g" rs1 [3] $end
$var wire 1 h" rs1 [2] $end
$var wire 1 i" rs1 [1] $end
$var wire 1 j" rs1 [0] $end
$var wire 1 k" rs2 [4] $end
$var wire 1 l" rs2 [3] $end
$var wire 1 m" rs2 [2] $end
$var wire 1 n" rs2 [1] $end
$var wire 1 o" rs2 [0] $end
$var wire 1 p" wdata [31] $end
$var wire 1 q" wdata [30] $end
$var wire 1 r" wdata [29] $end
$var wire 1 s" wdata [28] $end
$var wire 1 t" wdata [27] $end
$var wire 1 u" wdata [26] $end
$var wire 1 v" wdata [25] $end
$var wire 1 w" wdata [24] $end
$var wire 1 x" wdata [23] $end
$var wire 1 y" wdata [22] $end
$var wire 1 z" wdata [21] $end
$var wire 1 {" wdata [20] $end
$var wire 1 |" wdata [19] $end
$var wire 1 }" wdata [18] $end
$var wire 1 ~" wdata [17] $end
$var wire 1 !# wdata [16] $end
$var wire 1 "# wdata [15] $end
$var wire 1 ## wdata [14] $end
$var wire 1 $# wdata [13] $end
$var wire 1 %# wdata [12] $end
$var wire 1 &# wdata [11] $end
$var wire 1 '# wdata [10] $end
$var wire 1 (# wdata [9] $end
$var wire 1 )# wdata [8] $end
$var wire 1 *# wdata [7] $end
$var wire 1 +# wdata [6] $end
$var wire 1 ,# wdata [5] $end
$var wire 1 -# wdata [4] $end
$var wire 1 .# wdata [3] $end
$var wire 1 /# wdata [2] $end
$var wire 1 0# wdata [1] $end
$var wire 1 1# wdata [0] $end
$var reg 32 2# rdata1 [31:0] $end
$var reg 32 3# rdata2 [31:0] $end
$upscope $end

$scope module imm_gen_i $end
$var wire 1 4# inst [31] $end
$var wire 1 5# inst [30] $end
$var wire 1 6# inst [29] $end
$var wire 1 7# inst [28] $end
$var wire 1 8# inst [27] $end
$var wire 1 9# inst [26] $end
$var wire 1 :# inst [25] $end
$var wire 1 ;# inst [24] $end
$var wire 1 <# inst [23] $end
$var wire 1 =# inst [22] $end
$var wire 1 ># inst [21] $end
$var wire 1 ?# inst [20] $end
$var wire 1 @# inst [19] $end
$var wire 1 A# inst [18] $end
$var wire 1 B# inst [17] $end
$var wire 1 C# inst [16] $end
$var wire 1 D# inst [15] $end
$var wire 1 E# inst [14] $end
$var wire 1 F# inst [13] $end
$var wire 1 G# inst [12] $end
$var wire 1 H# inst [11] $end
$var wire 1 I# inst [10] $end
$var wire 1 J# inst [9] $end
$var wire 1 K# inst [8] $end
$var wire 1 L# inst [7] $end
$var wire 1 M# inst [6] $end
$var wire 1 N# inst [5] $end
$var wire 1 O# inst [4] $end
$var wire 1 P# inst [3] $end
$var wire 1 Q# inst [2] $end
$var wire 1 R# inst [1] $end
$var wire 1 S# inst [0] $end
$var reg 32 T# imm_val [31:0] $end
$upscope $end

$scope module alu_i $end
$var wire 1 U# aluop [3] $end
$var wire 1 V# aluop [2] $end
$var wire 1 W# aluop [1] $end
$var wire 1 X# aluop [0] $end
$var wire 1 Y# opr_a [31] $end
$var wire 1 Z# opr_a [30] $end
$var wire 1 [# opr_a [29] $end
$var wire 1 \# opr_a [28] $end
$var wire 1 ]# opr_a [27] $end
$var wire 1 ^# opr_a [26] $end
$var wire 1 _# opr_a [25] $end
$var wire 1 `# opr_a [24] $end
$var wire 1 a# opr_a [23] $end
$var wire 1 b# opr_a [22] $end
$var wire 1 c# opr_a [21] $end
$var wire 1 d# opr_a [20] $end
$var wire 1 e# opr_a [19] $end
$var wire 1 f# opr_a [18] $end
$var wire 1 g# opr_a [17] $end
$var wire 1 h# opr_a [16] $end
$var wire 1 i# opr_a [15] $end
$var wire 1 j# opr_a [14] $end
$var wire 1 k# opr_a [13] $end
$var wire 1 l# opr_a [12] $end
$var wire 1 m# opr_a [11] $end
$var wire 1 n# opr_a [10] $end
$var wire 1 o# opr_a [9] $end
$var wire 1 p# opr_a [8] $end
$var wire 1 q# opr_a [7] $end
$var wire 1 r# opr_a [6] $end
$var wire 1 s# opr_a [5] $end
$var wire 1 t# opr_a [4] $end
$var wire 1 u# opr_a [3] $end
$var wire 1 v# opr_a [2] $end
$var wire 1 w# opr_a [1] $end
$var wire 1 x# opr_a [0] $end
$var wire 1 y# opr_b [31] $end
$var wire 1 z# opr_b [30] $end
$var wire 1 {# opr_b [29] $end
$var wire 1 |# opr_b [28] $end
$var wire 1 }# opr_b [27] $end
$var wire 1 ~# opr_b [26] $end
$var wire 1 !$ opr_b [25] $end
$var wire 1 "$ opr_b [24] $end
$var wire 1 #$ opr_b [23] $end
$var wire 1 $$ opr_b [22] $end
$var wire 1 %$ opr_b [21] $end
$var wire 1 &$ opr_b [20] $end
$var wire 1 '$ opr_b [19] $end
$var wire 1 ($ opr_b [18] $end
$var wire 1 )$ opr_b [17] $end
$var wire 1 *$ opr_b [16] $end
$var wire 1 +$ opr_b [15] $end
$var wire 1 ,$ opr_b [14] $end
$var wire 1 -$ opr_b [13] $end
$var wire 1 .$ opr_b [12] $end
$var wire 1 /$ opr_b [11] $end
$var wire 1 0$ opr_b [10] $end
$var wire 1 1$ opr_b [9] $end
$var wire 1 2$ opr_b [8] $end
$var wire 1 3$ opr_b [7] $end
$var wire 1 4$ opr_b [6] $end
$var wire 1 5$ opr_b [5] $end
$var wire 1 6$ opr_b [4] $end
$var wire 1 7$ opr_b [3] $end
$var wire 1 8$ opr_b [2] $end
$var wire 1 9$ opr_b [1] $end
$var wire 1 :$ opr_b [0] $end
$var reg 32 ;$ opr_res [31:0] $end
$upscope $end

$scope module br_cond_i $end
$var parameter 3 <$ EQUAL $end
$var parameter 3 =$ NOT_EQUAL $end
$var parameter 3 >$ LESS_THAN $end
$var parameter 3 ?$ GREATER_EQ $end
$var parameter 3 @$ LESS_THAN_U $end
$var parameter 3 A$ GREATER_EQ_U $end
$var wire 1 B$ rdata1 [31] $end
$var wire 1 C$ rdata1 [30] $end
$var wire 1 D$ rdata1 [29] $end
$var wire 1 E$ rdata1 [28] $end
$var wire 1 F$ rdata1 [27] $end
$var wire 1 G$ rdata1 [26] $end
$var wire 1 H$ rdata1 [25] $end
$var wire 1 I$ rdata1 [24] $end
$var wire 1 J$ rdata1 [23] $end
$var wire 1 K$ rdata1 [22] $end
$var wire 1 L$ rdata1 [21] $end
$var wire 1 M$ rdata1 [20] $end
$var wire 1 N$ rdata1 [19] $end
$var wire 1 O$ rdata1 [18] $end
$var wire 1 P$ rdata1 [17] $end
$var wire 1 Q$ rdata1 [16] $end
$var wire 1 R$ rdata1 [15] $end
$var wire 1 S$ rdata1 [14] $end
$var wire 1 T$ rdata1 [13] $end
$var wire 1 U$ rdata1 [12] $end
$var wire 1 V$ rdata1 [11] $end
$var wire 1 W$ rdata1 [10] $end
$var wire 1 X$ rdata1 [9] $end
$var wire 1 Y$ rdata1 [8] $end
$var wire 1 Z$ rdata1 [7] $end
$var wire 1 [$ rdata1 [6] $end
$var wire 1 \$ rdata1 [5] $end
$var wire 1 ]$ rdata1 [4] $end
$var wire 1 ^$ rdata1 [3] $end
$var wire 1 _$ rdata1 [2] $end
$var wire 1 `$ rdata1 [1] $end
$var wire 1 a$ rdata1 [0] $end
$var wire 1 b$ rdata2 [31] $end
$var wire 1 c$ rdata2 [30] $end
$var wire 1 d$ rdata2 [29] $end
$var wire 1 e$ rdata2 [28] $end
$var wire 1 f$ rdata2 [27] $end
$var wire 1 g$ rdata2 [26] $end
$var wire 1 h$ rdata2 [25] $end
$var wire 1 i$ rdata2 [24] $end
$var wire 1 j$ rdata2 [23] $end
$var wire 1 k$ rdata2 [22] $end
$var wire 1 l$ rdata2 [21] $end
$var wire 1 m$ rdata2 [20] $end
$var wire 1 n$ rdata2 [19] $end
$var wire 1 o$ rdata2 [18] $end
$var wire 1 p$ rdata2 [17] $end
$var wire 1 q$ rdata2 [16] $end
$var wire 1 r$ rdata2 [15] $end
$var wire 1 s$ rdata2 [14] $end
$var wire 1 t$ rdata2 [13] $end
$var wire 1 u$ rdata2 [12] $end
$var wire 1 v$ rdata2 [11] $end
$var wire 1 w$ rdata2 [10] $end
$var wire 1 x$ rdata2 [9] $end
$var wire 1 y$ rdata2 [8] $end
$var wire 1 z$ rdata2 [7] $end
$var wire 1 {$ rdata2 [6] $end
$var wire 1 |$ rdata2 [5] $end
$var wire 1 }$ rdata2 [4] $end
$var wire 1 ~$ rdata2 [3] $end
$var wire 1 !% rdata2 [2] $end
$var wire 1 "% rdata2 [1] $end
$var wire 1 #% rdata2 [0] $end
$var wire 1 $% br_type [2] $end
$var wire 1 %% br_type [1] $end
$var wire 1 &% br_type [0] $end
$var reg 1 '% br_taken $end
$upscope $end

$scope module data_mem_i $end
$var parameter 3 (% BYTE $end
$var parameter 3 )% HALFWORD $end
$var parameter 3 *% WORD $end
$var parameter 3 +% BYTE_UNSIGNED $end
$var parameter 3 ,% HALFWORD_UNSIGNED $end
$var wire 1 ! clk $end
$var wire 1 -% rd_en $end
$var wire 1 .% wr_en $end
$var wire 1 /% addr [31] $end
$var wire 1 0% addr [30] $end
$var wire 1 1% addr [29] $end
$var wire 1 2% addr [28] $end
$var wire 1 3% addr [27] $end
$var wire 1 4% addr [26] $end
$var wire 1 5% addr [25] $end
$var wire 1 6% addr [24] $end
$var wire 1 7% addr [23] $end
$var wire 1 8% addr [22] $end
$var wire 1 9% addr [21] $end
$var wire 1 :% addr [20] $end
$var wire 1 ;% addr [19] $end
$var wire 1 <% addr [18] $end
$var wire 1 =% addr [17] $end
$var wire 1 >% addr [16] $end
$var wire 1 ?% addr [15] $end
$var wire 1 @% addr [14] $end
$var wire 1 A% addr [13] $end
$var wire 1 B% addr [12] $end
$var wire 1 C% addr [11] $end
$var wire 1 D% addr [10] $end
$var wire 1 E% addr [9] $end
$var wire 1 F% addr [8] $end
$var wire 1 G% addr [7] $end
$var wire 1 H% addr [6] $end
$var wire 1 I% addr [5] $end
$var wire 1 J% addr [4] $end
$var wire 1 K% addr [3] $end
$var wire 1 L% addr [2] $end
$var wire 1 M% addr [1] $end
$var wire 1 N% addr [0] $end
$var wire 1 O% mem_acc_mode [2] $end
$var wire 1 P% mem_acc_mode [1] $end
$var wire 1 Q% mem_acc_mode [0] $end
$var wire 1 R% rdata2 [31] $end
$var wire 1 S% rdata2 [30] $end
$var wire 1 T% rdata2 [29] $end
$var wire 1 U% rdata2 [28] $end
$var wire 1 V% rdata2 [27] $end
$var wire 1 W% rdata2 [26] $end
$var wire 1 X% rdata2 [25] $end
$var wire 1 Y% rdata2 [24] $end
$var wire 1 Z% rdata2 [23] $end
$var wire 1 [% rdata2 [22] $end
$var wire 1 \% rdata2 [21] $end
$var wire 1 ]% rdata2 [20] $end
$var wire 1 ^% rdata2 [19] $end
$var wire 1 _% rdata2 [18] $end
$var wire 1 `% rdata2 [17] $end
$var wire 1 a% rdata2 [16] $end
$var wire 1 b% rdata2 [15] $end
$var wire 1 c% rdata2 [14] $end
$var wire 1 d% rdata2 [13] $end
$var wire 1 e% rdata2 [12] $end
$var wire 1 f% rdata2 [11] $end
$var wire 1 g% rdata2 [10] $end
$var wire 1 h% rdata2 [9] $end
$var wire 1 i% rdata2 [8] $end
$var wire 1 j% rdata2 [7] $end
$var wire 1 k% rdata2 [6] $end
$var wire 1 l% rdata2 [5] $end
$var wire 1 m% rdata2 [4] $end
$var wire 1 n% rdata2 [3] $end
$var wire 1 o% rdata2 [2] $end
$var wire 1 p% rdata2 [1] $end
$var wire 1 q% rdata2 [0] $end
$var reg 32 r% rdata [31:0] $end
$upscope $end

$scope module hazard_unit_i $end
$var wire 1 s% rf_en_mem $end
$var wire 1 n rf_en_wb $end
$var wire 1 t% rs1_ex [4] $end
$var wire 1 u% rs1_ex [3] $end
$var wire 1 v% rs1_ex [2] $end
$var wire 1 w% rs1_ex [1] $end
$var wire 1 x% rs1_ex [0] $end
$var wire 1 y% rs2_ex [4] $end
$var wire 1 z% rs2_ex [3] $end
$var wire 1 {% rs2_ex [2] $end
$var wire 1 |% rs2_ex [1] $end
$var wire 1 }% rs2_ex [0] $end
$var wire 1 ~% rd_mem [4] $end
$var wire 1 !& rd_mem [3] $end
$var wire 1 "& rd_mem [2] $end
$var wire 1 #& rd_mem [1] $end
$var wire 1 $& rd_mem [0] $end
$var wire 1 %& rd_wb [4] $end
$var wire 1 && rd_wb [3] $end
$var wire 1 '& rd_wb [2] $end
$var wire 1 (& rd_wb [1] $end
$var wire 1 )& rd_wb [0] $end
$var reg 2 *& forward_a [1:0] $end
$var reg 2 +& forward_b [1:0] $end
$var wire 1 ,& rd_ex [4] $end
$var wire 1 -& rd_ex [3] $end
$var wire 1 .& rd_ex [2] $end
$var wire 1 /& rd_ex [1] $end
$var wire 1 0& rd_ex [0] $end
$var wire 1 1& rs1_id [4] $end
$var wire 1 2& rs1_id [3] $end
$var wire 1 3& rs1_id [2] $end
$var wire 1 4& rs1_id [1] $end
$var wire 1 5& rs1_id [0] $end
$var wire 1 6& rs2_id [4] $end
$var wire 1 7& rs2_id [3] $end
$var wire 1 8& rs2_id [2] $end
$var wire 1 9& rs2_id [1] $end
$var wire 1 :& rs2_id [0] $end
$var wire 1 ;& sel_wb_ex [1] $end
$var wire 1 <& sel_wb_ex [0] $end
$var reg 1 =& stall_if $end
$var reg 1 >& stall_id $end
$var reg 1 ?& flush_ex $end
$var wire 1 @& br_taken $end
$var reg 1 A& flush_id $end
$var reg 1 B& stall_lw $end
$upscope $end

$scope module csr_i $end
$var wire 1 ! clk $end
$var wire 1 C& addr [31] $end
$var wire 1 D& addr [30] $end
$var wire 1 E& addr [29] $end
$var wire 1 F& addr [28] $end
$var wire 1 G& addr [27] $end
$var wire 1 H& addr [26] $end
$var wire 1 I& addr [25] $end
$var wire 1 J& addr [24] $end
$var wire 1 K& addr [23] $end
$var wire 1 L& addr [22] $end
$var wire 1 M& addr [21] $end
$var wire 1 N& addr [20] $end
$var wire 1 O& addr [19] $end
$var wire 1 P& addr [18] $end
$var wire 1 Q& addr [17] $end
$var wire 1 R& addr [16] $end
$var wire 1 S& addr [15] $end
$var wire 1 T& addr [14] $end
$var wire 1 U& addr [13] $end
$var wire 1 V& addr [12] $end
$var wire 1 W& addr [11] $end
$var wire 1 X& addr [10] $end
$var wire 1 Y& addr [9] $end
$var wire 1 Z& addr [8] $end
$var wire 1 [& addr [7] $end
$var wire 1 \& addr [6] $end
$var wire 1 ]& addr [5] $end
$var wire 1 ^& addr [4] $end
$var wire 1 _& addr [3] $end
$var wire 1 `& addr [2] $end
$var wire 1 a& addr [1] $end
$var wire 1 b& addr [0] $end
$var wire 1 c& data [31] $end
$var wire 1 d& data [30] $end
$var wire 1 e& data [29] $end
$var wire 1 f& data [28] $end
$var wire 1 g& data [27] $end
$var wire 1 h& data [26] $end
$var wire 1 i& data [25] $end
$var wire 1 j& data [24] $end
$var wire 1 k& data [23] $end
$var wire 1 l& data [22] $end
$var wire 1 m& data [21] $end
$var wire 1 n& data [20] $end
$var wire 1 o& data [19] $end
$var wire 1 p& data [18] $end
$var wire 1 q& data [17] $end
$var wire 1 r& data [16] $end
$var wire 1 s& data [15] $end
$var wire 1 t& data [14] $end
$var wire 1 u& data [13] $end
$var wire 1 v& data [12] $end
$var wire 1 w& data [11] $end
$var wire 1 x& data [10] $end
$var wire 1 y& data [9] $end
$var wire 1 z& data [8] $end
$var wire 1 {& data [7] $end
$var wire 1 |& data [6] $end
$var wire 1 }& data [5] $end
$var wire 1 ~& data [4] $end
$var wire 1 !' data [3] $end
$var wire 1 "' data [2] $end
$var wire 1 #' data [1] $end
$var wire 1 $' data [0] $end
$var wire 1 %' pc [31] $end
$var wire 1 &' pc [30] $end
$var wire 1 '' pc [29] $end
$var wire 1 (' pc [28] $end
$var wire 1 )' pc [27] $end
$var wire 1 *' pc [26] $end
$var wire 1 +' pc [25] $end
$var wire 1 ,' pc [24] $end
$var wire 1 -' pc [23] $end
$var wire 1 .' pc [22] $end
$var wire 1 /' pc [21] $end
$var wire 1 0' pc [20] $end
$var wire 1 1' pc [19] $end
$var wire 1 2' pc [18] $end
$var wire 1 3' pc [17] $end
$var wire 1 4' pc [16] $end
$var wire 1 5' pc [15] $end
$var wire 1 6' pc [14] $end
$var wire 1 7' pc [13] $end
$var wire 1 8' pc [12] $end
$var wire 1 9' pc [11] $end
$var wire 1 :' pc [10] $end
$var wire 1 ;' pc [9] $end
$var wire 1 <' pc [8] $end
$var wire 1 =' pc [7] $end
$var wire 1 >' pc [6] $end
$var wire 1 ?' pc [5] $end
$var wire 1 @' pc [4] $end
$var wire 1 A' pc [3] $end
$var wire 1 B' pc [2] $end
$var wire 1 C' pc [1] $end
$var wire 1 D' pc [0] $end
$var wire 1 E' inst [31] $end
$var wire 1 F' inst [30] $end
$var wire 1 G' inst [29] $end
$var wire 1 H' inst [28] $end
$var wire 1 I' inst [27] $end
$var wire 1 J' inst [26] $end
$var wire 1 K' inst [25] $end
$var wire 1 L' inst [24] $end
$var wire 1 M' inst [23] $end
$var wire 1 N' inst [22] $end
$var wire 1 O' inst [21] $end
$var wire 1 P' inst [20] $end
$var wire 1 Q' inst [19] $end
$var wire 1 R' inst [18] $end
$var wire 1 S' inst [17] $end
$var wire 1 T' inst [16] $end
$var wire 1 U' inst [15] $end
$var wire 1 V' inst [14] $end
$var wire 1 W' inst [13] $end
$var wire 1 X' inst [12] $end
$var wire 1 Y' inst [11] $end
$var wire 1 Z' inst [10] $end
$var wire 1 [' inst [9] $end
$var wire 1 \' inst [8] $end
$var wire 1 ]' inst [7] $end
$var wire 1 ^' inst [6] $end
$var wire 1 _' inst [5] $end
$var wire 1 `' inst [4] $end
$var wire 1 a' inst [3] $end
$var wire 1 b' inst [2] $end
$var wire 1 c' inst [1] $end
$var wire 1 d' inst [0] $end
$var wire 1 e' csr_reg_wr $end
$var wire 1 f' csr_reg_rd $end
$var wire 1 g' check_mret $end
$var reg 32 h' rdata [31:0] $end
$var reg 32 i' epc [31:0] $end
$upscope $end

$scope module controller_i $end
$var wire 1 j' funct7 [6] $end
$var wire 1 k' funct7 [5] $end
$var wire 1 l' funct7 [4] $end
$var wire 1 m' funct7 [3] $end
$var wire 1 n' funct7 [2] $end
$var wire 1 o' funct7 [1] $end
$var wire 1 p' funct7 [0] $end
$var wire 1 q' opcode [6] $end
$var wire 1 r' opcode [5] $end
$var wire 1 s' opcode [4] $end
$var wire 1 t' opcode [3] $end
$var wire 1 u' opcode [2] $end
$var wire 1 v' opcode [1] $end
$var wire 1 w' opcode [0] $end
$var wire 1 x' funct3 [2] $end
$var wire 1 y' funct3 [1] $end
$var wire 1 z' funct3 [0] $end
$var wire 1 {' br_taken $end
$var wire 1 |' inst [31] $end
$var wire 1 }' inst [30] $end
$var wire 1 ~' inst [29] $end
$var wire 1 !( inst [28] $end
$var wire 1 "( inst [27] $end
$var wire 1 #( inst [26] $end
$var wire 1 $( inst [25] $end
$var wire 1 %( inst [24] $end
$var wire 1 &( inst [23] $end
$var wire 1 '( inst [22] $end
$var wire 1 (( inst [21] $end
$var wire 1 )( inst [20] $end
$var wire 1 *( inst [19] $end
$var wire 1 +( inst [18] $end
$var wire 1 ,( inst [17] $end
$var wire 1 -( inst [16] $end
$var wire 1 .( inst [15] $end
$var wire 1 /( inst [14] $end
$var wire 1 0( inst [13] $end
$var wire 1 1( inst [12] $end
$var wire 1 2( inst [11] $end
$var wire 1 3( inst [10] $end
$var wire 1 4( inst [9] $end
$var wire 1 5( inst [8] $end
$var wire 1 6( inst [7] $end
$var wire 1 7( inst [6] $end
$var wire 1 8( inst [5] $end
$var wire 1 9( inst [4] $end
$var wire 1 :( inst [3] $end
$var wire 1 ;( inst [2] $end
$var wire 1 <( inst [1] $end
$var wire 1 =( inst [0] $end
$var reg 4 >( aluop [3:0] $end
$var reg 2 ?( wb_sel [1:0] $end
$var reg 3 @( mem_acc_mode [2:0] $end
$var reg 3 A( br_type [2:0] $end
$var reg 1 B( epc_taken $end
$var reg 1 C( sel_a $end
$var reg 1 D( sel_b $end
$var reg 1 E( rd_en $end
$var reg 1 F( wr_en $end
$var reg 1 G( rf_en $end
$var reg 1 H( br_decision $end
$var reg 1 I( check_mret $end
$var reg 1 J( csr_reg_rd $end
$var reg 1 K( csr_reg_wr $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx #
0$
x%
x&
bx '
bx (
bx )
bx *
bx +
bx ,
bx -
bx .
bx /
bx 0
bx 1
bx 2
bx 3
bx 4
05
06
07
08
b0 9
b0 :
0;
x<
x=
x>
x?
b1 @
bx A
bx B
bx C
bx D
bx E
bx F
bx G
bx H
bx I
bx J
bx K
bx L
b111 M
bx N
bx O
bx P
bx Q
bx R
bx S
bx T
bx U
bx V
bx W
bx X
bx Y
bx Z
bx [
bx \
bx ]
0^
x_
x`
0a
xb
xc
bx d
bx e
b111 f
bx g
bx h
bx i
xj
xk
xl
xm
bx 4!
bx v!
bx 9"
bx Z"
bx ["
bx \"
bx ]"
bx ^"
bx _"
bx 2#
bx 3#
bx T#
bx ;$
0'%
bx r%
b0 *&
b0 +&
0=&
0>&
0?&
0A&
0B&
bx h'
bx i'
bx >(
b1 ?(
b111 @(
b111 A(
xB(
1C(
0D(
0E(
0F(
0G(
0H(
xI(
xJ(
xK(
b0 <$
b1 =$
b100 >$
b101 ?$
b110 @$
b111 A$
b0 (%
b1 )%
b10 *%
b11 +%
b100 ,%
zn
1o
0p
1"
0!
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
x/(
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
x#(
x"(
x!(
x~'
x}'
x|'
0{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
xq'
xp'
xo'
xn'
xm'
xl'
xk'
xj'
xg'
xf'
xe'
xd'
xc'
xb'
xa'
x`'
x_'
x^'
x]'
x\'
x['
xZ'
xY'
xX'
xW'
xV'
xU'
xT'
xS'
xR'
xQ'
xP'
xO'
xN'
xM'
xL'
xK'
xJ'
xI'
xH'
xG'
xF'
xE'
xD'
xC'
xB'
xA'
x@'
x?'
x>'
x='
x<'
x;'
x:'
x9'
x8'
x7'
x6'
x5'
x4'
x3'
x2'
x1'
x0'
x/'
x.'
x-'
x,'
x+'
x*'
x)'
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
x{&
xz&
xy&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
0@&
x<&
x;&
x:&
x9&
x8&
x7&
x6&
x5&
x4&
x3&
x2&
x1&
x0&
x/&
x.&
x-&
x,&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
xs%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
xY%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
1Q%
1P%
1O%
xN%
xM%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
0`"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
xI!
xH!
xG!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
x)!
x(!
x'!
x&!
x%!
x$!
x#!
x"!
x!!
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
1q
$end
#5
1!
b0 4!
b0 J
b0 E
b0 F
b0 R
b0 T
b0 Y
b0 ,
b0 .
b0 (
0%
0_
0b
0=
0?
b0 A
b0 L
b0 N
b0 G
b0 \
b0 U
b0 )
0`
0c
b0 B
b0 H
b0 ]
b0 e
b0 *
b0 C
b0 4
b0 D
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0x&
0w&
0v&
0u&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0''
0&'
0%'
0.%
0-%
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0)&
0(&
0'&
0&&
0%&
0e"
0d"
0c"
0b"
0a"
0$&
0#&
0"&
0!&
0~%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0&%
0%%
0$%
0X#
0W#
0V#
0U#
0<&
0;&
00&
0/&
0.&
0-&
0,&
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0|'
0d'
0c'
0b'
0a'
0`'
0_'
0^'
0]'
0\'
0['
0Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0Q'
0P'
0O'
0N'
0M'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
b0 Z"
b0 ["
b0 \"
b0 ]"
b0 _"
b0 ^"
b0 1
b0 0
b0 /
b0 -
b0 +
b0 '
05&
04&
03&
02&
01&
0j"
0i"
0h"
0g"
0f"
0:&
09&
08&
07&
06&
0o"
0n"
0m"
0l"
0k"
0w'
0v'
0u'
0t'
0s'
0r'
0q'
0z'
0y'
0x'
0p'
0o'
0n'
0m'
0l'
0k'
0j'
b0 2#
b0 3#
x'%
b0 9"
b100 2
b0 O
b0 Z
b0 W
b0 V
b0 3
b0 I
x;
b0 S
b0 Q
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0T!
0S!
1R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
03!
02!
11!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
x@&
x{'
x?&
xA&
x7
x8
b100 v!
b0 ;$
1'%
b0x00 2
b0 P
1;
b0 [
b100 h
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
xR!
x1!
1@&
1{'
1?&
1A&
17
18
b0x00 v!
b0 2
b0x00 h
0R!
01!
b0 v!
b0 h
#10
0"
0!
#15
1!
bx e
b10011 J
1=(
1<(
19(
1d'
1c'
1`'
1S#
1R#
1O#
1Y"
1X"
1U"
b10011 ]"
b10011 /
1w'
1v'
1s'
b0 T#
1D(
1G(
b0 >(
b0 K
1$
b0 X
1p
1`"
#20
0!
#25
1!
#30
0!
#35
1!
#40
0!
#45
1!
#50
0!
#55
1!
#60
0!
#65
1!
#70
0!
#75
1!
#80
0!
#85
1!
#90
0!
#95
1!
#100
0!
#105
1!
#110
0!
#115
1!
#120
0!
#125
1!
#130
0!
#135
1!
#140
0!
#145
1!
#150
0!
#155
1!
#160
0!
#165
1!
#170
0!
#175
1!
#180
0!
#185
1!
#190
0!
#195
1!
#200
0!
#205
1!
#210
0!
#215
1!
#220
0!
#225
1!
#230
0!
#235
1!
#240
0!
#245
1!
#250
0!
#255
1!
#260
0!
#265
1!
#270
0!
#275
1!
#280
0!
#285
1!
#290
0!
#295
1!
#300
0!
#305
1!
#310
0!
#315
1!
#320
0!
#325
1!
#330
0!
#335
1!
#340
0!
#345
1!
#350
0!
#355
1!
#360
0!
#365
1!
#370
0!
#375
1!
#380
0!
#385
1!
#390
0!
#395
1!
#400
0!
#405
1!
#410
0!
#415
1!
#420
0!
#425
1!
#430
0!
#435
1!
#440
0!
#445
1!
#450
0!
#455
1!
#460
0!
#465
1!
#470
0!
#475
1!
#480
0!
#485
1!
#490
0!
#495
1!
#500
0!
#505
1!
#510
0!
#515
1!
#520
0!
#525
1!
#530
0!
#535
1!
#540
0!
#545
1!
#550
0!
#555
1!
#560
0!
#565
1!
#570
0!
#575
1!
#580
0!
#585
1!
#590
0!
#595
1!
#600
0!
#605
1!
#610
0!
#615
1!
#620
0!
#625
1!
#630
0!
#635
1!
#640
0!
#645
1!
#650
0!
#655
1!
#660
0!
#665
1!
#670
0!
#675
1!
#680
0!
#685
1!
#690
0!
#695
1!
#700
0!
#705
1!
#710
0!
#715
1!
#720
0!
#725
1!
#730
0!
#735
1!
#740
0!
#745
1!
#750
0!
#755
1!
#760
0!
#765
1!
#770
0!
#775
1!
#780
0!
#785
1!
#790
0!
#795
1!
#800
0!
#805
1!
#810
0!
#815
1!
#820
0!
#825
1!
#830
0!
#835
1!
#840
0!
#845
1!
#850
0!
#855
1!
#860
0!
#865
1!
#870
0!
#875
1!
#880
0!
#885
1!
#890
0!
#895
1!
#900
0!
#905
1!
#910
0!
#915
1!
#920
0!
#925
1!
#930
0!
#935
1!
#940
0!
#945
1!
#950
0!
#955
1!
#960
0!
#965
1!
#970
0!
#975
1!
#980
0!
#985
1!
#990
0!
#995
1!
#1000
0!
#1005
1!
